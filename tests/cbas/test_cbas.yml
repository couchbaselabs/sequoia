---
-
  include: tests/templates/rebalance.yml, tests/templates/fts.yml

# start json and binary data loading
-
   image: sequoiatools/pillowfight
   command: "-U  {{.Orchestrator}} -B {{.Scale 100}} -I {{.Scale 1000000}} -t 1"
-
   image: sequoiatools/gideon
   command: "kv --ops {{.Scale 1000}} --create 10 --get 90 --expire 20 --ttl 600  --hosts {{.Orchestrator}} --bucket {{.Bucket}} --sizes 1600"
-
   command: "kv --ops {{.Scale 1000}} --create 30 --get 70 --delete 10   --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
-
   image: sequoiatools/cbas
   command: "> LOGS"
   wait: false
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "{{.Scale 10}}"
   wait: true

# connect bucket with CBAS
-
  image: sequoiatools/curloop
  command: "cbas.sh create bucket defaultBucket with { \''bucket\': \''default\', \''nodes\': \''172.23.108.8\' };"
-
  command: "cbas.sh create shadow dataset shadowBucket on defaultBucket;"
-
  command: "cbas.sh connect bucket defaultBucket with { \''password': \''' };"
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "{{.Scale 10}}"
   wait: true

#debug: run once to check
-
  image: sequoiatools/curloop
  command: "cbas.sh select value t from shadowBucket t where \\`state\\` = \''25\' and \\`result\\` = \''SUCCESS\' group by \\`city\\` ;"
-
  command: "cbas.sh select count(*) from shadowBucket where \\`state\\` = \''29\' and \\`component\\` = \''0A\' ;"
-
  command: "cbas.sh select count(*) from shadowBucket where \\`state\\` = \''79\' and \\`component\\` != \''D8\' ;"
-
  command: "cbas.sh select value t from shadowBucket t where \\`state\\` = \''B1\' and \\`rating\\`> \''NUM100\'NUM and \\`duration\\` > \''NUM7000\'NUM and \\`totalCount\\`> \''NUM80\'NUM group by \\`component\\` ;"
-
  command: "cbas.sh select value t from shadowBucket t where \\`state\\` = \''7B\' and \\`rating\\`> \''NUM100\'NUM and \\`duration\\` < \''NUM7000\'NUM and \\`totalCount\\`< \''NUM80\'NUM group by \\`component\\` ;"

-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "{{.Scale 20}}"
   wait: true

# query on cbas side. # TODO add more queries
-
  image: sequoiatools/curloop
  command: "cbasloop.sh select value t from shadowBucket t where \\`state\\` = \''25\' and \\`result\\` = \''SUCCESS\' group by \\`city\\` ;"
-
  command: "cbasloop.sh select count(*) from shadowBucket where \\`state\\` = \''29\' and \\`component\\` = \''0A\' ;"
-
  command: "cbasloop.sh select count(*) from shadowBucket where \\`state\\` = \''79\' and \\`component\\` != \''D8\' ;"
-
  command: "cbasloop.sh select value t from shadowBucket t where \\`state\\` = \''B1\' and \\`rating\\`> \''NUM100\'NUM and \\`duration\\` > \''NUM7000\'NUM and \\`totalCount\\`> \''NUM80\'NUM group by \\`component\\` ;"
-
  command: "cbasloop.sh select value t from shadowBucket t where \\`state\\` = \''7B\' and \\`rating\\`> \''NUM100\'NUM and \\`duration\\` < \''NUM7000\'NUM and \\`totalCount\\`< \''NUM80\'NUM group by \\`component\\` ;"

-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "{{.Scale 20}}"
   wait: true

# swap rebalance
-
  template: add_node
  args: "{{.NthDataNode 6}}, data"
-
  template: rebalance_out
  args: "{{.NthDataNode 2}}"
-
  template: wait_for_rebalance
  wait: true

# scale back down
-
  template: rebalance_out
  args: "{{.NthDataNode 3}}"
-
  template: wait_for_rebalance
  wait: true

# failover a node
-
  template: failover_node_forced
  args: "{{.NthDataNode 4}}"
  wait: true
-
  template: rebalance
  wait: true
-
  template: wait_for_rebalance
  wait: true

# add one node and then stop rebalance
-
  template: add_node
  args: "{{.NthDataNode 7}}, data"
-
  template: rebalance
  wait: false
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "{{.Scale 100}}"
   wait: true
-
  template: rebalance_stop

#debug: run once again to check
-
  image: sequoiatools/curloop
  command: "cbas.sh select value t from shadowBucket t where \\`state\\` = \''25\' and \\`result\\` = \''SUCCESS\' group by \\`city\\` ;"
-
  command: "cbas.sh select count(*) from shadowBucket where \\`state\\` = \''29\' and \\`component\\` = \''0A\' ;"
-
  command: "cbas.sh select count(*) from shadowBucket where \\`state\\` = \''79\' and \\`component\\` != \''D8\' ;"
-
  command: "cbas.sh select value t from shadowBucket t where \\`state\\` = \''B1\' and \\`rating\\`> \''NUM100\'NUM and \\`duration\\` > \''NUM7000\'NUM and \\`totalCount\\`> \''NUM80\'NUM group by \\`component\\` ;"
-
  command: "cbas.sh select value t from shadowBucket t where \\`state\\` = \''7B\' and \\`rating\\`> \''NUM100\'NUM and \\`duration\\` < \''NUM7000\'NUM and \\`totalCount\\`< \''NUM80\'NUM group by \\`component\\` ;"


# failover node with delta recovery
-
  template: failover_and_recover
  args: "{{.NthDataNode 6}}, delta"
  wait: true
-
  template: wait_for_rebalance
  wait: true

# rebalance out one node
-
  template: rebalance_out
  args: "{{.NthDataNode 4}}"
-
  template: wait_for_rebalance
  wait: true