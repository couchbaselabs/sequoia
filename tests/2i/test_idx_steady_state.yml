- include: tests/templates/kv.yml, tests/templates/n1ql.yml, tests/templates/rebalance.yml

############### data loading ################
- image: sequoiatools/gideon
  command: "kv --ops {{.Scale 1000}} --create 100 --update 25 --delete 25  --expire 100 --ttl 600   --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
- command: "kv --ops {{.Scale 500}} --create 100 --update 25 --delete 25 --sizes 64 96 --expire 100 --ttl 600  --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
- command: "kv --ops {{.Scale 500}} --create 100 --update 25 --delete 25--sizes 64 96 --expire 100 --ttl 600  --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
- command: "kv --ops {{.Scale 200}} --create 100 --update 25 --delete 25 --sizes 1024 --expire 100 --ttl 600 --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"


###############  create indexes ################
- section_start: create_replica_indexes
- image: sequoiatools/cbq
  command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_rating on `{{.Bucket}}`(rating) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_claims on `{{.Bucket}}`(claim) using GSI with {\"num_replica\":2}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_result on `{{.Bucket}}`(result) using GSI with {\"num_replica\":1,\"defer_build\": true}'"
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create primary index on `{{.Bucket}}` using GSI with {\"num_replica\":2}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_claims on `{{.NthBucket 1}}`(claim) using GSI with {\"num_replica\":1,\"defer_build\": true}'"
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_result_rating on `{{.NthBucket 1}}`(rating,result) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_claims on `{{.NthBucket 2}}`(claim) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_claims on `{{.NthBucket 3}}`(claim) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_result_ratings_claims_pindex on `{{.Bucket}}`(rating,result,claim) partition by hash(rating) using GSI with {\"num_replica\":1, \"num_partition\":4}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create primary index on `{{.NthBucket 1}}` partition by hash(rating,result,claim) using GSI with {\"num_partition\":4}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_result_rating on `{{.NthBucket 2}}`(rating,result) partition by hash(rating) using GSI with {\"num_partition\":4}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_result_rating on `{{.NthBucket 3}}`(rating,result) partition by hash(rating,LOWER(result)) using GSI with {\"defer_build\": true, \"num_partition\":4}'"

- template: cbq
  args: "'build index on `{{.Bucket}}`\\(default_result)'"
  wait: true
- args: "'build index on `{{.NthBucket 1}}`\\(o1_claims)'"
  wait: true
- args: "'build index on `{{.NthBucket 3}}`\\(o3_result_rating)'"
  wait: true
# Sleep for some time to allow DDL to complete if running in background.
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

- section_end: create_replica_indexes


# ###############  run queries ################
- section_start: query_replica_indexes
- template: attack_query
  args: "0, 1, {{.Nodes | .Service `n1ql` | net 0}}:{{.QueryPort}}, 'select result from default where result is not null LIMIT 50000'"
#- args: "0, 1, {{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}, 'select * from `{{.NthBucket 1}}` limit 25 offset 1000'"
- args: "0, 1, {{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}, 'select claim from `{{.NthBucket 3}}` where claim is not null limit 100'"

- image: sequoiatools/cbdozer
  command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}/query/service
            -body 'select result,AVG(rating),MIN(rating),MAX(rating) from `{{.Bucket}}` where result is not missing and rating >= 400 and rating <= 1000 group by result'"
- command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 0}}:{{.QueryPort}}/query/service
            -body 'select result,SUM(rating) from `{{.NthBucket 1}}` where result is not null and rating >= 115 and rating <= 125 group by result'"
#- command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}/query/service
#            -body 'select result,AVG(rating),MIN(rating),MAX(rating) from `{{.NthBucket 2}}` where result is not missing and rating >= 800 and rating <= 810 group by result'"
- command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 0}}:{{.QueryPort}}/query/service
            -body 'select result,SUM(rating) from `{{.NthBucket 3}}` where result is not null and rating >= 410 and rating <= 420 group by result'"
- command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}/query/service
            -body 'select round(min(rating),2) as min_rating,round(max(rating),2) as max_rating,round(avg(rating),2) as avg_rating from `{{.NthBucket 2}}` where result is not null and rating between 500 and 520'"
- section_end: query_replica_indexes

# Run the ingestion and queries for Scale x 3 hrs.
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "{{.Scale 10800}}"
   wait: true

###############  Drop some Indexes ################
- section_start: recreate_replica_indexes
- template: cbq
  args: "'drop primary index on `{{.Bucket}}` using GSI'"
- args: "'drop index `{{.Bucket}}`.default_rating using GSI'"
- args: "'drop index `{{.NthBucket 1}}`.o1_claims using GSI'"
# Sleep for some time to allow DDL to complete in the background
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "600"
   wait: true

###############  Recreate some Indexes ################
- template: cbq
  args: "'create index default_rating on `{{.Bucket}}`\\(rating) using GSI'"
- args: "'create primary index on `{{.Bucket}}` using GSI'"
- args: "'create index o1_claims on `{{.NthBucket 1}}`\\(claim) using GSI'"
# Sleep for some time to allow DDL to complete in the background
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "600"
   wait: true
- section_end: recreate_replica_indexes

###############  Drop all Indexes ################
- section_start: drop_all_indexes
- template: cbq
  args: "'drop index `{{.Bucket}}`.default_rating'"
- args: "'drop index `{{.Bucket}}`.default_claims'"
- args: "'drop index `{{.Bucket}}`.default_result'"
- args: "'drop primary index on `{{.Bucket}}`'"
- args: "'drop index `{{.NthBucket 1}}`.o1_claims'"
- args: "'drop index `{{.NthBucket 1}}`.o1_result_rating'"
- args: "'drop index `{{.NthBucket 2}}`.o2_claims'"
- args: "'drop index `{{.NthBucket 3}}`.o3_claims'"
- args: "'drop index `{{.Bucket}}`.default_result_ratings_claims_pindex'"
- args: "'drop index `{{.NthBucket 2}}`.o2_result_rating'"
- args: "'drop index `{{.NthBucket 3}}`.o3_result_rating'"
- args: "'drop primary index on `{{.NthBucket 1}}`'"
# Sleep for some time to allow DDL to complete in the background
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "600"
   wait: true
- section_end: drop_all_indexes
